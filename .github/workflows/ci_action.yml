name: CI Action

on:
  push:
      branches: 
        - '**'
        - '!master'
  pull_request:
      branches:
        - '**'
jobs:
  build:
      name: Build ${{ matrix.label }}
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          include:
            - label: macos_apple-clang
              os: macos-latest
              compiler: default
              SHELL: bash
              SEP: /
              LS_CMD: ls -la
            - label: ubuntu_gcc
              os: ubuntu-latest
              compiler: {c: gcc, cpp: g++-13}
              SHELL: bash
              SEP: /
              LS_CMD: ls -la
            - label: ubuntu_clang
              os: ubuntu-latest
              compiler: {c: clang, cpp: clang++}
              SHELL: bash
              SEP: /
              LS_CMD: ls -la
            - label: windows_msvc
              os: windows-latest
              compiler: default
              SHELL: cmd
              SEP: \
              LS_CMD: dir /a
      defaults:
        run:
          shell: ${{ matrix.SHELL }}
      env:
        BUILD_DIR: ${{ github.workspace }}${{ matrix.SEP }}build
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: List Workspace
          run:  ${{matrix.LS_CMD}} ${{ github.workspace }}
        - name: Customize Compilers
          if: ${{ matrix.compiler!='default' }}
          run: |
            echo "CC=${{matrix.compiler.c}}" >> "$GITHUB_ENV"
            echo "CXX=${{matrix.compiler.cpp}}" >> "$GITHUB_ENV"
        - name: Compile
          run: |
            echo "== CMAKE VERSION =="
            cmake --version
            echo "== CMAKE CONFIGURE =="
            cmake -B${{env.BUILD_DIR}} -DCI_TRIGGERED=1
            echo "== CMAKE BUILD =="
            cmake --build ${{env.BUILD_DIR}} --config Release
        - name: List Build
          run:  ${{matrix.LS_CMD}} ${{env.BUILD_DIR}}
        - name: Test
          run: |
            cd ${{env.BUILD_DIR}}
            ctest -C Release -T test --output-on-failure
            cd ${{ github.workspace }}
            